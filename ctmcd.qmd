---
title: "ctmcd"
format: revealjs
---

```{r}
#| message: FALSE
#| warning: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
library(ctmcd)
library(expm)
library(tidyverse)
```
## Example from Package Vignette


```{r}
#| message: FALSE
#| warning: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
gm0 <- matrix(1, 8, 8)
diag(gm0) <- 0
diag(gm0) <- -rowSums(gm0)
gm0[8,] <- 0
gm0
```
```{r}

data("tm_abs")
tm_abs
gmem <- gm(tm=tm_abs, te=1, method="EM", gmguess=gm0)
plot(gmem)
```

```{r}
#| message: FALSE
#| warning: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
plot(gmem$ll, main="Expectation Maximization Algorithm\nLog Likelihood Path",
xlab="Iteration", ylab="Log-Likelihood")
```


## 3 State Seretide example

```{r}
#| message: FALSE
#| warning: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
s <- matrix(
  c(
    210,  61,  1,
     89, 645, 14,
     0,    0, 81
    ),  
    nrow=3, byrow=TRUE,
    dimnames = list(c("S1", "S2", "S3"), c("S1", "S2", "S3"))
)
```


```{r}
#| message: FALSE
#| warning: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
s0 <- matrix(1, 3, 3)
diag(s0) <- 0
diag(s0) <- -rowSums(s0)
s0[3,] <- 0
s0
```

```{r}
#| message: FALSE
#| warning: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
sem <- gm(s, te=1, method="EM", gmguess=s0)
plot(sem)
```

```{r}
#| message: FALSE
#| warning: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
plot(gmem$ll, main="Expectation Maximization Algorithm\nLog Likelihood Path",
xlab="Iteration", ylab="Log-Likelihood")
```




```{r}
t <- 1  # time interval
Q  <-sem$par
Q
P <- expm(Q * t)
round(P,3)
```

```{r}
t <- 12  # time interval
Q
P <- expm(Q * t)
round(P,3)

```

```{r}
Time <- seq(1,100)
TP11 <- numeric(length(Time))
for (t in Time) {
  P <- expm(Q * t)
  TP11[t] <- P[1,1]
}


df_plot <- data.frame(Time, TP11)
names(df_plot) <- c("Weeks", "TP11")
df_plot |> ggplot(aes(x = Weeks, y = TP11)) +
  geom_line() +
  labs(title = "Probability of S1 to S1 transition over time",
       x = "Weeks", y = "Transition Probability") 

 
```




```{r}
Time <- seq(1,100)
TP <- matrix(0, nrow=length(Time), ncol=9)
for (t in Time) {
  P <- expm(Q * t)
  TP[t,1] <- P[1,1]
  TP[t,2] <- P[1,2]
  TP[t,3] <- P[1,3]
  TP[t,4] <- P[2,1]
  TP[t,5] <- P[2,2]
  TP[t,6] <- P[2,3]
  TP[t,7] <- P[3,1]
  TP[t,8] <- P[3,2]
  TP[t,9] <- P[3,3]
  
}
```

```{r}
probs <- as.data.frame(TP)
TP <- cbind(Weeks = Time, probs)
names(TP) <- c("Weeks",
               "P[1,1]", "P[1,2]", "P[1,3]",
               "P[2,1]", "P[2,2]", "P[2,3]",
               "P[3,1]", "P[3,2]", "P[3,3]")
head(TP)
```

```{r}

df_long <- TP %>%
  pivot_longer(
    cols = starts_with("P["), # Selects all columns starting with "P["
    names_to = "TP",    # New column for the original column names
    values_to = "Value"        # New column for the values
  )
```


```{r}
df_long |> ggplot(aes(x = Weeks, y = Value, color = TP)) +
  geom_line() +
  facet_wrap(~ TP, scales = "free_y") +
  labs(title = "State Transition Probabilities over Time",
       x = "Weeks", y = "Transition Probability")
```



Marius Pfeuffer [ctmcd: An R Package for Estimating the Parameters of a Continuous-Time Markov Chain from Discrete-Time Data](https://cran.r-project.org/web/packages/ctmcd/vignettes/RJ-2017-038.pdf)
